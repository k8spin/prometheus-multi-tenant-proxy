name: "Release"

on:
  push:
    tags:
      - v*

jobs:
  release:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-go@v2
      with:
        go-version: '1.15.8'
    
    - name: Unit tests
      run: go test -v ./...

    - run: |
        export VERSION=${GITHUB_REF##*/}
        echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
        export CURRENT_DATE=$(date --iso-8601=seconds)
        echo "RELEASE_DATE=$CURRENT_DATE" >> $GITHUB_ENV

    - name: Building binaries
      run: |
        go mod download
        mkdir binaries
        cd cmd/prometheus-multi-tenant-proxy
        GOOS=darwin GOARCH=amd64 go build -o prometheus-multi-tenant-proxy -ldflags="-X 'main.version=${{ env.RELEASE_VERSION }}' -X 'main.commit=${{ github.sha }}' -X 'main.date=${{ env.RELEASE_DATE }}'"
        mv prometheus-multi-tenant-proxy ../../binaries/prometheus-multi-tenant-proxy-darwing-amd64
        GOOS=linux GOARCH=amd64 go build -o prometheus-multi-tenant-proxy -ldflags="-X 'main.version=${{ env.RELEASE_VERSION }}' -X 'main.commit=${{ github.sha }}' -X 'main.date=${{ env.RELEASE_DATE }}'"
        mv prometheus-multi-tenant-proxy ../../binaries/prometheus-multi-tenant-proxy-linux-amd64

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to GitHub Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        file: ./build/package/Dockerfile
        context: .
        platforms: linux/amd64,linux/arm/v7,linux/arm64
        pull: true
        no-cache: true
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:${{ env.RELEASE_VERSION }}
          ghcr.io/${{ github.repository }}:latest
        build-args: |
          RELEASE_DATE=${{ env.RELEASE_DATE }}
          VERSION=${{ env.RELEASE_VERSION }}
          COMMIT=${{ github.sha }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: Release ${{ env.RELEASE_VERSION }}
        body: |
          Release ${{ env.RELEASE_VERSION }}

    - name: Upload Linux release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./binaries/prometheus-multi-tenant-proxy-linux-amd64
        asset_name: prometheus-multi-tenant-proxy-linux-amd64
        asset_content_type: application/octet-stream

    - name: Upload Darwin release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./binaries/prometheus-multi-tenant-proxy-darwing-amd64
        asset_name: prometheus-multi-tenant-proxy-darwing-amd64
        asset_content_type: application/octet-stream
